{"version":3,"sources":["webpack:///./node_modules/angular2-tag-input/dist/index.js","webpack:///./node_modules/angular2-tag-input/dist/lib/components/tag-input-autocomplete/tag-input-autocomplete.component.js","webpack:///./node_modules/angular2-tag-input/dist/lib/components/tag-input-item/tag-input-item.component.js","webpack:///./node_modules/angular2-tag-input/dist/lib/components/tag-input/tag-input.component.js","webpack:///./node_modules/angular2-tag-input/dist/lib/shared/tag-input-keys.js","webpack:///./node_modules/angular2-tag-input/dist/lib/tag-input.module.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/do.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/filter.js","webpack:///./src/app/pages/policy/antidetection/antidetection.component.css","webpack:///./src/app/pages/policy/antidetection/antidetection.component.html","webpack:///./src/app/pages/policy/antidetection/antidetection.component.ts","webpack:///./src/app/pages/policy/antilink/antilink.component.css","webpack:///./src/app/pages/policy/antilink/antilink.component.html","webpack:///./src/app/pages/policy/antilink/antilink.component.ts","webpack:///./src/app/pages/policy/limitconn/limitconn.component.css","webpack:///./src/app/pages/policy/limitconn/limitconn.component.html","webpack:///./src/app/pages/policy/limitconn/limitconn.component.ts","webpack:///./src/app/pages/policy/policy-list/modal-content-policy.component.html","webpack:///./src/app/pages/policy/policy-list/modal-content-policy.component.ts","webpack:///./src/app/pages/policy/policy-list/policy-list.component.html","webpack:///./src/app/pages/policy/policy-list/policy-list.component.ts","webpack:///./src/app/pages/policy/policy.class.ts","webpack:///./src/app/pages/policy/policy.component.html","webpack:///./src/app/pages/policy/policy.component.ts","webpack:///./src/app/pages/policy/policy.module.ts","webpack:///./src/app/pages/policy/policy.routing.ts","webpack:///./src/app/pages/policy/policy.service.ts","webpack:///./src/app/pages/policy/secrules/secrules.component.css","webpack:///./src/app/pages/policy/secrules/secrules.component.html","webpack:///./src/app/pages/policy/secrules/secrules.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4EAA4E,6CAA6C,iDAAiD,4FAA4F,MAAM;AAC5Q,2CAA2C,qFAAqF,uBAAuB,2BAA2B,kBAAkB,gEAAgE,wBAAwB,uBAAuB,0BAA0B,uBAAuB,OAAO,sCAAsC,wBAAwB,qBAAqB,0BAA0B,OAAO,6BAA6B,4BAA4B,OAAO;AAC/hB,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA,mBAAmB,qBAAqB;AACxC,6BAA6B,qBAAqB;AAClD,0BAA0B,sBAAsB;AAChD,0BAA0B,sBAAsB;AAChD;AACA;AACA,CAAC;AACD;AACA,4D;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB,EAAE;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uCAAuC,MAAM,oFAAoF;AACjI,2CAA2C,gEAAgE,wBAAwB,qBAAqB,0BAA0B,8BAA8B,4BAA4B,wBAAwB,4BAA4B,2BAA2B,uCAAuC,OAAO,sCAAsC,4BAA4B,2BAA2B,uBAAuB,wBAAwB,8BAA8B,wBAAwB,qBAAqB,0BAA0B,yBAAyB,2BAA2B,2BAA2B,oBAAoB,OAAO,2CAA2C,qBAAqB,4BAA4B,OAAO,kEAAkE,0BAA0B,uBAAuB,OAAO;AACj6B,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C,kBAAkB,qBAAqB;AACvC,mBAAmB,qBAAqB;AACxC,wBAAwB,sBAAsB;AAC9C,wBAAwB,yEAAyE;AACjG;AACA;AACA,CAAC;AACD;AACA,oD;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"policy-policy-module.js","sourcesContent":["\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('./lib/tag-input.module'));\r\n__export(require('./lib/components/tag-input/tag-input.component'));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar Observable_1 = require('rxjs/Observable');\r\nvar tag_input_keys_1 = require('../../shared/tag-input-keys');\r\nvar TagInputAutocompleteComponent = (function () {\r\n    function TagInputAutocompleteComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.selectFirstItem = false;\r\n        this.itemSelected = new core_1.EventEmitter();\r\n        this.enterPressed = new core_1.EventEmitter();\r\n        this.selectedItemIndex = null;\r\n    }\r\n    Object.defineProperty(TagInputAutocompleteComponent.prototype, \"itemsCount\", {\r\n        get: function () {\r\n            return this.items ? this.items.length : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TagInputAutocompleteComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.keySubscription = Observable_1.Observable.fromEvent(window, 'keydown')\r\n            .filter(function (event) {\r\n            return event.keyCode === tag_input_keys_1.KEYS.upArrow ||\r\n                event.keyCode === tag_input_keys_1.KEYS.downArrow ||\r\n                event.keyCode === tag_input_keys_1.KEYS.enter ||\r\n                event.keyCode === tag_input_keys_1.KEYS.esc;\r\n        })\r\n            .do(function (event) {\r\n            switch (event.keyCode) {\r\n                case tag_input_keys_1.KEYS.downArrow:\r\n                    _this.handleDownArrow();\r\n                    break;\r\n                case tag_input_keys_1.KEYS.upArrow:\r\n                    _this.handleUpArrow();\r\n                    break;\r\n                case tag_input_keys_1.KEYS.enter:\r\n                    _this.selectItem();\r\n                    _this.enterPressed.emit();\r\n                    break;\r\n                case tag_input_keys_1.KEYS.esc:\r\n                    break;\r\n            }\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        })\r\n            .subscribe();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.ensureHighlightVisible = function () {\r\n        var container = this.elementRef.nativeElement.querySelector('.sk-select-results__container');\r\n        if (!container) {\r\n            return;\r\n        }\r\n        var choices = container.querySelectorAll('.sk-select-results__item');\r\n        if (choices.length < 1) {\r\n            return;\r\n        }\r\n        if (this.selectedItemIndex < 0) {\r\n            return;\r\n        }\r\n        var highlighted = choices[this.selectedItemIndex];\r\n        if (!highlighted) {\r\n            return;\r\n        }\r\n        var posY = highlighted.offsetTop + highlighted.clientHeight - container.scrollTop;\r\n        var height = container.offsetHeight;\r\n        if (posY > height) {\r\n            container.scrollTop += posY - height;\r\n        }\r\n        else if (posY < highlighted.clientHeight) {\r\n            container.scrollTop -= highlighted.clientHeight - posY;\r\n        }\r\n    };\r\n    TagInputAutocompleteComponent.prototype.goToTop = function () {\r\n        this.selectedItemIndex = 0;\r\n        this.ensureHighlightVisible();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.goToBottom = function (itemsCount) {\r\n        this.selectedItemIndex = itemsCount - 1;\r\n        this.ensureHighlightVisible();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.goToNext = function () {\r\n        if (this.selectedItemIndex + 1 < this.itemsCount) {\r\n            this.selectedItemIndex++;\r\n        }\r\n        else {\r\n            this.goToTop();\r\n        }\r\n        this.ensureHighlightVisible();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.goToPrevious = function () {\r\n        if (this.selectedItemIndex - 1 >= 0) {\r\n            this.selectedItemIndex--;\r\n        }\r\n        else {\r\n            this.goToBottom(this.itemsCount);\r\n        }\r\n        this.ensureHighlightVisible();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.handleUpArrow = function () {\r\n        if (this.selectedItemIndex === null) {\r\n            this.goToBottom(this.itemsCount);\r\n            return false;\r\n        }\r\n        this.goToPrevious();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.handleDownArrow = function () {\r\n        // Initialize to zero if first time results are shown\r\n        if (this.selectedItemIndex === null) {\r\n            this.goToTop();\r\n            return false;\r\n        }\r\n        this.goToNext();\r\n    };\r\n    TagInputAutocompleteComponent.prototype.selectItem = function (itemIndex) {\r\n        var itemToEmit = itemIndex ? this.items[itemIndex] : this.items[this.selectedItemIndex];\r\n        if (itemToEmit) {\r\n            this.itemSelected.emit(itemToEmit);\r\n        }\r\n    };\r\n    TagInputAutocompleteComponent.prototype.ngOnChanges = function (changes) {\r\n        if (this.selectFirstItem && this.itemsCount > 0) {\r\n            this.goToTop();\r\n        }\r\n    };\r\n    TagInputAutocompleteComponent.prototype.ngOnDestroy = function () {\r\n        this.keySubscription.unsubscribe();\r\n    };\r\n    TagInputAutocompleteComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'rl-tag-input-autocomplete',\r\n                    template: \"\\n    <div\\n      *ngFor=\\\"let item of items; let itemIndex = index\\\"\\n      [ngClass]=\\\"{ 'is-selected': selectedItemIndex === itemIndex }\\\"\\n      (click)=\\\"selectItem(itemIndex)\\\"\\n      class=\\\"rl-autocomplete-item\\\">\\n      {{item}}\\n    </div>\\n  \",\r\n                    styles: [\"\\n    :host {\\n      box-shadow: 0 1.5px 4px rgba(0, 0, 0, 0.24), 0 1.5px 6px rgba(0, 0, 0, 0.12);\\n      display: block;\\n      position: absolute;\\n      top: 100%;\\n      font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif;\\n      font-size: 16px;\\n      color: #444444;\\n      background: white;\\n      padding: 8px 0;\\n    }\\n\\n     :host .rl-autocomplete-item {\\n      padding: 0 16px;\\n      height: 48px;\\n      line-height: 48px;\\n    }\\n\\n     :host .is-selected {\\n      background: #eeeeee;\\n    }\\n  \"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TagInputAutocompleteComponent.ctorParameters = [\r\n        { type: core_1.ElementRef, },\r\n    ];\r\n    TagInputAutocompleteComponent.propDecorators = {\r\n        'items': [{ type: core_1.Input },],\r\n        'selectFirstItem': [{ type: core_1.Input },],\r\n        'itemSelected': [{ type: core_1.Output },],\r\n        'enterPressed': [{ type: core_1.Output },],\r\n    };\r\n    return TagInputAutocompleteComponent;\r\n}());\r\nexports.TagInputAutocompleteComponent = TagInputAutocompleteComponent;\r\n//# sourceMappingURL=tag-input-autocomplete.component.js.map","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar TagInputItemComponent = (function () {\r\n    function TagInputItemComponent() {\r\n        this.tagRemoved = new core_1.EventEmitter();\r\n    }\r\n    Object.defineProperty(TagInputItemComponent.prototype, \"isSelected\", {\r\n        get: function () { return !!this.selected; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TagInputItemComponent.prototype.removeTag = function () {\r\n        this.tagRemoved.emit(this.index);\r\n    };\r\n    TagInputItemComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'rl-tag-input-item',\r\n                    template: \"\\n    {{text}}\\n    <span\\n    class=\\\"ng2-tag-input-remove\\\"\\n    (click)=\\\"removeTag()\\\">&times;</span>\\n  \",\r\n                    styles: [\"\\n    :host {\\n      font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif;\\n      font-size: 16px;\\n      height: 32px;\\n      line-height: 32px;\\n      display: inline-block;\\n      background: #e0e0e0;\\n      padding: 0 12px;\\n      border-radius: 90px;\\n      margin-right: 10px;\\n      transition: all 0.12s ease-out;\\n    }\\n\\n     :host .ng2-tag-input-remove {\\n      background: #a6a6a6;\\n      border-radius: 50%;\\n      color: #e0e0e0;\\n      cursor: pointer;\\n      display: inline-block;\\n      font-size: 17px;\\n      height: 24px;\\n      line-height: 24px;\\n      margin-left: 6px;\\n      margin-right: -6px;\\n      text-align: center;\\n      width: 24px;\\n    }\\n\\n    :host.ng2-tag-input-item-selected {\\n      color: white;\\n      background: #0d8bff;\\n    }\\n\\n     :host.ng2-tag-input-item-selected .ng2-tag-input-remove {\\n      background: white;\\n      color: #0d8bff;\\n    }\\n  \"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TagInputItemComponent.ctorParameters = [];\r\n    TagInputItemComponent.propDecorators = {\r\n        'selected': [{ type: core_1.Input },],\r\n        'text': [{ type: core_1.Input },],\r\n        'index': [{ type: core_1.Input },],\r\n        'tagRemoved': [{ type: core_1.Output },],\r\n        'isSelected': [{ type: core_1.HostBinding, args: ['class.ng2-tag-input-item-selected',] },],\r\n    };\r\n    return TagInputItemComponent;\r\n}());\r\nexports.TagInputItemComponent = TagInputItemComponent;\r\n//# sourceMappingURL=tag-input-item.component.js.map","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar forms_1 = require('@angular/forms');\r\nvar tag_input_keys_1 = require('../../shared/tag-input-keys');\r\n/**\r\n * Taken from @angular/common/src/facade/lang\r\n */\r\nfunction isBlank(obj) {\r\n    return obj === undefined || obj === null;\r\n}\r\nvar TagInputComponent = (function () {\r\n    function TagInputComponent(fb, elementRef) {\r\n        this.fb = fb;\r\n        this.elementRef = elementRef;\r\n        this.addOnBlur = true;\r\n        this.addOnComma = true;\r\n        this.addOnEnter = true;\r\n        this.addOnPaste = true;\r\n        this.addOnSpace = false;\r\n        this.allowDuplicates = false;\r\n        this.allowedTagsPattern = /.+/;\r\n        this.autocomplete = false;\r\n        this.autocompleteItems = [];\r\n        this.autocompleteMustMatch = true;\r\n        this.autocompleteSelectFirstItem = true;\r\n        this.pasteSplitPattern = ',';\r\n        this.placeholder = 'Add a tag';\r\n        this.addTag = new core_1.EventEmitter();\r\n        this.removeTag = new core_1.EventEmitter();\r\n        this.canShowAutoComplete = false;\r\n        this.autocompleteResults = [];\r\n        this.tagsList = [];\r\n        /** Implemented as part of ControlValueAccessor. */\r\n        this.onChange = function () { };\r\n        this.onTouched = function () { };\r\n    }\r\n    Object.defineProperty(TagInputComponent.prototype, \"tagInputField\", {\r\n        get: function () {\r\n            return this.tagInputForm.get('tagInputField');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TagInputComponent.prototype, \"inputValue\", {\r\n        get: function () {\r\n            return this.tagInputField.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TagInputComponent.prototype.onDocumentClick = function (event, target) {\r\n        if (!target) {\r\n            return;\r\n        }\r\n        if (!this.elementRef.nativeElement.contains(target)) {\r\n            this.canShowAutoComplete = false;\r\n        }\r\n    };\r\n    TagInputComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.splitRegExp = new RegExp(this.pasteSplitPattern);\r\n        this.tagInputForm = this.fb.group({\r\n            tagInputField: ''\r\n        });\r\n        this.tagInputSubscription = this.tagInputField.valueChanges\r\n            .do(function (value) {\r\n            _this.autocompleteResults = _this.autocompleteItems.filter(function (item) {\r\n                /**\r\n                 * _isTagUnique makes sure to remove items from the autocompelte dropdown if they have\r\n                 * already been added to the model, and allowDuplicates is false\r\n                 */\r\n                return item.toLowerCase().indexOf(value.toLowerCase()) > -1 && _this._isTagUnique(item);\r\n            });\r\n        })\r\n            .subscribe();\r\n    };\r\n    TagInputComponent.prototype.onKeydown = function (event) {\r\n        var key = event.keyCode;\r\n        switch (key) {\r\n            case tag_input_keys_1.KEYS.backspace:\r\n                this._handleBackspace();\r\n                break;\r\n            case tag_input_keys_1.KEYS.enter:\r\n                if (this.addOnEnter && !this.showAutocomplete()) {\r\n                    this._addTags([this.inputValue]);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case tag_input_keys_1.KEYS.comma:\r\n                if (this.addOnComma) {\r\n                    this._addTags([this.inputValue]);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case tag_input_keys_1.KEYS.space:\r\n                if (this.addOnSpace) {\r\n                    this._addTags([this.inputValue]);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    TagInputComponent.prototype.onInputBlurred = function (event) {\r\n        if (this.addOnBlur) {\r\n            this._addTags([this.inputValue]);\r\n        }\r\n        this.isFocused = false;\r\n    };\r\n    TagInputComponent.prototype.onInputFocused = function () {\r\n        var _this = this;\r\n        this.isFocused = true;\r\n        setTimeout(function () { return _this.canShowAutoComplete = true; });\r\n    };\r\n    TagInputComponent.prototype.onInputPaste = function (event) {\r\n        var _this = this;\r\n        var clipboardData = event.clipboardData || (event.originalEvent && event.originalEvent.clipboardData);\r\n        var pastedString = clipboardData.getData('text/plain');\r\n        var tags = this._splitString(pastedString);\r\n        this._addTags(tags);\r\n        setTimeout(function () { return _this._resetInput(); });\r\n    };\r\n    TagInputComponent.prototype.onAutocompleteSelect = function (selectedItem) {\r\n        this._addTags([selectedItem]);\r\n        this.tagInputElement.nativeElement.focus();\r\n    };\r\n    TagInputComponent.prototype.onAutocompleteEnter = function () {\r\n        if (this.addOnEnter && this.showAutocomplete() && !this.autocompleteMustMatch) {\r\n            this._addTags([this.inputValue]);\r\n        }\r\n    };\r\n    TagInputComponent.prototype.showAutocomplete = function () {\r\n        return (this.autocomplete &&\r\n            this.autocompleteItems &&\r\n            this.autocompleteItems.length > 0 &&\r\n            this.canShowAutoComplete &&\r\n            this.inputValue.length > 0);\r\n    };\r\n    TagInputComponent.prototype._splitString = function (tagString) {\r\n        tagString = tagString.trim();\r\n        var tags = tagString.split(this.splitRegExp);\r\n        return tags.filter(function (tag) { return !!tag; });\r\n    };\r\n    TagInputComponent.prototype._isTagValid = function (tagString) {\r\n        return this.allowedTagsPattern.test(tagString) &&\r\n            this._isTagUnique(tagString);\r\n    };\r\n    TagInputComponent.prototype._isTagUnique = function (tagString) {\r\n        return this.allowDuplicates ? true : this.tagsList.indexOf(tagString) === -1;\r\n    };\r\n    TagInputComponent.prototype._isTagAutocompleteItem = function (tagString) {\r\n        return this.autocompleteItems.indexOf(tagString) > -1;\r\n    };\r\n    TagInputComponent.prototype._emitTagAdded = function (addedTags) {\r\n        var _this = this;\r\n        addedTags.forEach(function (tag) { return _this.addTag.emit(tag); });\r\n    };\r\n    TagInputComponent.prototype._emitTagRemoved = function (removedTag) {\r\n        this.removeTag.emit(removedTag);\r\n    };\r\n    TagInputComponent.prototype._addTags = function (tags) {\r\n        var _this = this;\r\n        var validTags = tags.map(function (tag) { return tag.trim(); })\r\n            .filter(function (tag) { return _this._isTagValid(tag); })\r\n            .filter(function (tag, index, tagArray) { return tagArray.indexOf(tag) === index; })\r\n            .filter(function (tag) { return (_this.showAutocomplete() && _this.autocompleteMustMatch) ? _this._isTagAutocompleteItem(tag) : true; });\r\n        this.tagsList = this.tagsList.concat(validTags);\r\n        this._resetSelected();\r\n        this._resetInput();\r\n        this.onChange(this.tagsList);\r\n        this._emitTagAdded(validTags);\r\n    };\r\n    TagInputComponent.prototype._removeTag = function (tagIndexToRemove) {\r\n        var removedTag = this.tagsList[tagIndexToRemove];\r\n        this.tagsList.splice(tagIndexToRemove, 1);\r\n        this._resetSelected();\r\n        this.onChange(this.tagsList);\r\n        this._emitTagRemoved(removedTag);\r\n    };\r\n    TagInputComponent.prototype._handleBackspace = function () {\r\n        if (!this.inputValue.length && this.tagsList.length) {\r\n            if (!isBlank(this.selectedTag)) {\r\n                this._removeTag(this.selectedTag);\r\n            }\r\n            else {\r\n                this.selectedTag = this.tagsList.length - 1;\r\n            }\r\n        }\r\n    };\r\n    TagInputComponent.prototype._resetSelected = function () {\r\n        this.selectedTag = null;\r\n    };\r\n    TagInputComponent.prototype._resetInput = function () {\r\n        this.tagInputField.setValue('');\r\n    };\r\n    TagInputComponent.prototype.writeValue = function (value) {\r\n        this.tagsList = value;\r\n    };\r\n    TagInputComponent.prototype.registerOnChange = function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    TagInputComponent.prototype.registerOnTouched = function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    TagInputComponent.prototype.ngOnDestroy = function () {\r\n        this.tagInputSubscription.unsubscribe();\r\n    };\r\n    TagInputComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'rl-tag-input',\r\n                    template: \"\\n    <rl-tag-input-item\\n      [text]=\\\"tag\\\"\\n      [index]=\\\"index\\\"\\n      [selected]=\\\"selectedTag === index\\\"\\n      (tagRemoved)=\\\"_removeTag($event)\\\"\\n      *ngFor=\\\"let tag of tagsList; let index = index\\\">\\n    </rl-tag-input-item>\\n    <form [formGroup]=\\\"tagInputForm\\\" class=\\\"ng2-tag-input-form\\\">\\n      <input\\n        class=\\\"ng2-tag-input-field\\\"\\n        type=\\\"text\\\"\\n        #tagInputElement\\n        formControlName=\\\"tagInputField\\\"\\n        [placeholder]=\\\"placeholder\\\"\\n        (paste)=\\\"onInputPaste($event)\\\"\\n        (keydown)=\\\"onKeydown($event)\\\"\\n        (blur)=\\\"onInputBlurred($event)\\\"\\n        (focus)=\\\"onInputFocused()\\\">\\n\\n      <div *ngIf=\\\"showAutocomplete()\\\" class=\\\"rl-tag-input-autocomplete-container\\\">\\n        <rl-tag-input-autocomplete\\n          [items]=\\\"autocompleteResults\\\"\\n          [selectFirstItem]=\\\"autocompleteSelectFirstItem\\\"\\n          (itemSelected)=\\\"onAutocompleteSelect($event)\\\"\\n          (enterPressed)=\\\"onAutocompleteEnter($event)\\\">\\n        </rl-tag-input-autocomplete>\\n      </div>\\n    </form>\\n  \",\r\n                    styles: [\"\\n    :host {\\n      font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif;\\n      font-size: 16px;\\n      display: block;\\n      box-shadow: 0 1px #ccc;\\n      padding: 8px 0 6px 0;\\n      will-change: box-shadow;\\n      transition: box-shadow 0.12s ease-out;\\n    }\\n\\n     :host .ng2-tag-input-form {\\n      display: inline;\\n    }\\n\\n     :host .ng2-tag-input-field {\\n      font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", sans-serif;\\n      font-size: 16px;\\n      display: inline-block;\\n      width: auto;\\n      box-shadow: none;\\n      border: 0;\\n      padding: 8px 0;\\n    }\\n\\n     :host .ng2-tag-input-field:focus {\\n      outline: 0;\\n    }\\n\\n     :host .rl-tag-input-autocomplete-container {\\n      position: relative;\\n      z-index: 10;\\n    }\\n\\n    :host.ng2-tag-input-focus {\\n      box-shadow: 0 2px #0d8bff;\\n    }\\n  \"],\r\n                    providers: [\r\n                        { provide: forms_1.NG_VALUE_ACCESSOR, useExisting: core_1.forwardRef(function () { return TagInputComponent; }), multi: true },\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TagInputComponent.ctorParameters = [\r\n        { type: forms_1.FormBuilder, },\r\n        { type: core_1.ElementRef, },\r\n    ];\r\n    TagInputComponent.propDecorators = {\r\n        'isFocused': [{ type: core_1.HostBinding, args: ['class.ng2-tag-input-focus',] },],\r\n        'addOnBlur': [{ type: core_1.Input },],\r\n        'addOnComma': [{ type: core_1.Input },],\r\n        'addOnEnter': [{ type: core_1.Input },],\r\n        'addOnPaste': [{ type: core_1.Input },],\r\n        'addOnSpace': [{ type: core_1.Input },],\r\n        'allowDuplicates': [{ type: core_1.Input },],\r\n        'allowedTagsPattern': [{ type: core_1.Input },],\r\n        'autocomplete': [{ type: core_1.Input },],\r\n        'autocompleteItems': [{ type: core_1.Input },],\r\n        'autocompleteMustMatch': [{ type: core_1.Input },],\r\n        'autocompleteSelectFirstItem': [{ type: core_1.Input },],\r\n        'pasteSplitPattern': [{ type: core_1.Input },],\r\n        'placeholder': [{ type: core_1.Input },],\r\n        'addTag': [{ type: core_1.Output, args: ['addTag',] },],\r\n        'removeTag': [{ type: core_1.Output, args: ['removeTag',] },],\r\n        'tagInputElement': [{ type: core_1.ViewChild, args: ['tagInputElement',] },],\r\n        'onDocumentClick': [{ type: core_1.HostListener, args: ['document:click', ['$event', '$event.target'],] },],\r\n    };\r\n    return TagInputComponent;\r\n}());\r\nexports.TagInputComponent = TagInputComponent;\r\n//# sourceMappingURL=tag-input.component.js.map","\"use strict\";\r\nexports.KEYS = {\r\n    backspace: 8,\r\n    comma: 188,\r\n    downArrow: 40,\r\n    enter: 13,\r\n    esc: 27,\r\n    space: 32,\r\n    upArrow: 38\r\n};\r\n//# sourceMappingURL=tag-input-keys.js.map","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar common_1 = require('@angular/common');\r\nvar forms_1 = require('@angular/forms');\r\nrequire('rxjs/add/observable/fromEvent');\r\nrequire('rxjs/add/operator/filter');\r\nrequire('rxjs/add/operator/do');\r\nvar tag_input_autocomplete_component_1 = require('./components/tag-input-autocomplete/tag-input-autocomplete.component');\r\nvar tag_input_component_1 = require('./components/tag-input/tag-input.component');\r\nvar tag_input_item_component_1 = require('./components/tag-input-item/tag-input-item.component');\r\nvar RlTagInputModule = (function () {\r\n    function RlTagInputModule() {\r\n    }\r\n    RlTagInputModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        common_1.CommonModule,\r\n                        forms_1.FormsModule,\r\n                        forms_1.ReactiveFormsModule\r\n                    ],\r\n                    declarations: [\r\n                        tag_input_autocomplete_component_1.TagInputAutocompleteComponent,\r\n                        tag_input_component_1.TagInputComponent,\r\n                        tag_input_item_component_1.TagInputItemComponent\r\n                    ],\r\n                    exports: [\r\n                        tag_input_component_1.TagInputComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    RlTagInputModule.ctorParameters = [];\r\n    return RlTagInputModule;\r\n}());\r\nexports.RlTagInputModule = RlTagInputModule;\r\n//# sourceMappingURL=tag-input.module.js.map","import { Observable } from 'rxjs';\nimport { _do } from '../../operator/do';\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n//# sourceMappingURL=do.js.map","import { Observable } from 'rxjs';\nimport { filter } from '../../operator/filter';\nObservable.prototype.filter = filter;\n//# sourceMappingURL=filter.js.map","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\n  <div class=\\\"row\\\">\\n    <!-- NEW WIDGET START -->\\n    <article class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n      <!-- Widget ID (each widget will need unique ID)-->\\n      <div>\\n        <!-- widget div-->\\n        <!-- widget content -->\\n        <div class=\\\"widget-body\\\" style=\\\"padding: 0 0 0 0px; background: #fff; border-radius: 0.25rem;\\\">\\n          <ul id=\\\"myTab1\\\" class=\\\"nav nav-tabs bordered\\\">\\n            <li [class.active]=false>\\n              <a routerLink=\\\"/pages/policy/secrules/{{_id}}\\\">攻击防护</a>\\n            </li>\\n            <li [class.active]=false>\\n              <a routerLink=\\\"/pages/policy/antilink/{{_id}}\\\">防信息滥用</a>\\n            </li>\\n            <li [class.active]=false>\\n              <a routerLink=\\\"/pages/policy/limitconn/{{_id}}\\\">防CC</a>\\n            </li>\\n            <li [class.active]=true>\\n              <a routerLink=\\\"/pages/policy/antidetection/{{_id}}\\\">防探测</a>\\n            </li>\\n          </ul>\\n          <div class=\\\"padding-top-10 col-md-12\\\" style=\\\"background: #fff;\\\">\\n            <form class=\\\"form-horizontal\\\"\\n                  #antidetectionForm=\\\"ngForm\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group col-md-12\\\" style=\\\"padding-top: 20px;\\\">\\n                  <legend>恶意爬虫检测</legend>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4 control-label\\\">\\n                    状态\\n                  </div>\\n                  <div class=\\\"col-md-8\\\">\\n                    <label class=\\\"radio radio-inline\\\">\\n                      <input type=\\\"radio\\\" name=\\\"crawler_states\\\" id=\\\"crawler_states_1\\\"\\n                             (click)=\\\"setStateCrawlerState(true)\\\"\\n                             [checked]=\\\"datas.config.twaf_anti_mal_crawler.state\\\"\\n                             value=\\\"1\\\">\\n                      开 </label>\\n                    <label class=\\\"radio radio-inline\\\">\\n                      <input type=\\\"radio\\\" name=\\\"crawler_states\\\" id=\\\"crawler_states_0\\\"\\n                             (click)=\\\"setStateCrawlerState(false)\\\"\\n                             [checked]=\\\"!datas.config.twaf_anti_mal_crawler.state\\\"\\n                             value=\\\"0\\\">\\n                      关 </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4 control-label\\\">爬虫诱捕</div>\\n                    <div class=\\\"col-md-8\\\">\\n                      <div class=\\\"checkbox\\\">\\n                        <label>\\n                          <input\\n                                  id=\\\"force_scan_robots_state\\\"\\n                                  name = \\\"force_scan_robots_state\\\"\\n                                  [(ngModel)]=\\\"datas.config.twaf_anti_mal_crawler.force_scan_robots_state\\\"\\n                                  [checked]=\\\"datas.config.twaf_anti_mal_crawler.force_scan_robots_state\\\"\\n                                  type=\\\"checkbox\\\"\\n                          /> 爬虫诱捕链接\\n                        </label>\\n                      </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\">动作</label>\\n                  <div class=\\\"col-md-2\\\">\\n                    <select name=\\\"crawler_action\\\" id=\\\"crawler_action\\\" class=\\\"form-control\\\"\\n                            [(ngModel)]=\\\"datas.config.twaf_anti_mal_crawler.action\\\">>\\n                      <option class=\\\"col-md-1\\\"\\n                              *ngFor=\\\"let item of crawler_action_list\\\"\\n                              [value]=\\\"item.value\\\"\\n                      >{{item.name}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"rowGroup\\\" [hidden]=\\\"datas.config.twaf_anti_mal_crawler.action !== 'redirect'\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                             name=\\\"crawler_redirect_url\\\"\\n                             id=\\\"crawler_redirect_url\\\"\\n                             [(ngModel)]=\\\"datas.config.twaf_anti_mal_crawler.redirect_url\\\"\\n                             class=\\\"form-control\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <select *ngIf=\\\"datas.config.twaf_anti_mal_crawler.action == 'deny'\\\"\\n                            name=\\\"crawler_action_meta\\\" id=\\\"crawler_action_meta\\\" class=\\\"form-control\\\"\\n                            [(ngModel)]=\\\"datas.config.twaf_anti_mal_crawler.action_meta\\\">\\n                      <option class=\\\"col-md-1\\\"\\n                              *ngFor=\\\"let item of codeList\\\"\\n                              [value]=\\\"item.value\\\"\\n                      >{{item.text}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-actions tt-form-actions-center\\\" style=\\\"padding-bottom: 25px; padding-top: 15px;\\\">\\n                  <footer>\\n                    <button type=\\\"submit\\\" class=\\\"btn tt-btn-info btn-sm\\\" (click)=\\\"submit(antidetectionForm)\\\">\\n                      确 认\\n                    </button>&nbsp;&nbsp;\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"Reset()\\\">\\n                       重置\\n                     </button>-->\\n                    <button type=\\\"button\\\" class=\\\"btn tt-btn-info btn-sm\\\" [routerLink]=\\\"['/pages/policy']\\\">\\n                      取 消\\n                    </button>\\n                  </footer>\\n                </div>\\n              </div>\\n            </form>\\n\\n          </div>\\n          <!-- end widget content -->\\n        </div>\\n        <!-- end widget div -->\\n      </div>\\n      <!-- end widget -->\\n    </article>\\n    <!-- WIDGET END -->\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {PolicyClass} from \"../policy.class\";\nimport {PolicyService} from \"../policy.service\";\n\n@Component({\n  selector: 'app-antidetection',\n  templateUrl: './antidetection.component.html',\n  styleUrls: ['./antidetection.component.css']\n})\nexport class AntidetectionComponent implements OnInit {\n    _id: string\n    detection_uri_white_list: any;\n    robot_uri_white_list: any;\n    datas: PolicyClass = new PolicyClass();\n    headers: any = [];\n  robot_action_list = [\n    {'name': '拦截并发送响应码', 'value': 'deny'},\n    {'name': '重定向', 'value': 'redirect'},\n    {'name': '连接重置', 'value': 'reset_connection'},\n    {'name': '放行', 'value': 'pass'},\n  ];\n  detection_action_list = [\n    {'name': '拦截并发送响应码', 'value': 'deny'},\n    {'name': '重定向', 'value': 'redirect'},\n    {'name': '连接重置', 'value': 'reset_connection'},\n    {'name': '放行', 'value': 'pass'},\n    {'name': '人机识别', 'value': 'robot'},\n  ];\n  crawler_action_list = [\n    {'name': '拦截并发送响应码', 'value': 'deny'},\n    {'name': '重定向', 'value': 'redirect'},\n    {'name': '连接重置', 'value': 'reset_connection'},\n    {'name': '放行', 'value': 'pass'},\n  ];\n  mode_list = [\n    {'name': 'captcha', 'value': 'captcha'},\n    {'name': 'js', 'value': 'js'},\n  ];\n  codeList = [\n    {value: \"400\", text: \"400\"},\n    {value: \"401\", text: \"401\"},\n    {value: \"403\", text: \"403\"},\n    {value: \"404\", text: \"404\"},\n    {value: \"405\", text: \"405\"},\n    {value: \"410\", text: \"410\"},\n    {value: \"500\", text: \"500\"},\n    {value: \"501\", text: \"501\"},\n    {value: \"503\", text: \"503\"},\n    {value: \"504\", text: \"504\"}\n  ];\n  constructor(\n      private _router: Router,\n      private _service: PolicyService,\n      private _activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    // 初始化表单数据\n    this._activatedRoute.params.subscribe((params) => {\n      this._id = params['_id'];\n      if (this._id) {\n        this._service.getPolicy(this._id).subscribe(data => {\n          this.datas.config = data['result'];\n        })\n      }\n    });\n  }\n\n  setStateCrawlerState(value) {\n    this.datas.config.twaf_anti_mal_crawler.state = value;\n  }\n\n  submit(form) {\n    const that = this;\n    this._service.setPolicy(this._id, this.datas).subscribe(\n        res => {\n          if (res['_status']) {\n            // this.toastr.success('编辑成功！', '');\n            // 延迟1s 后跳转至列表页面\n            setTimeout(function () {\n              that._router.navigate(['pages', 'policy']); // 为什么用that ： this容易找不到指代的是谁\n            }, '1000');\n          } else {\n            // this.toastr.error('编辑失败！', '');\n          }\n        },\n        error => {\n            // this.toastr.error('编辑失败！', '');\n        }\n    )\n  }\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <!-- NEW WIDGET START -->\\n        <article class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <!-- Widget ID (each widget will need unique ID)-->\\n            <div>\\n                <!-- widget div-->\\n                <!-- widget content -->\\n                <div class=\\\"widget-body\\\" style=\\\"padding: 0 0 0 0px; background: #fff; border-radius: 0.25rem;\\\">\\n                    <ul id=\\\"myTab1\\\" class=\\\"nav nav-tabs bordered\\\">\\n                      <li [class.active]=false>\\n                        <a routerLink=\\\"/pages/policy/secrules/{{_id}}\\\">攻击防护</a>\\n                      </li>\\n                      <li [class.active]=true>\\n                        <a routerLink=\\\"/pages/policy/antilink/{{_id}}\\\">防信息滥用</a>\\n                      </li>\\n                      <li [class.active]=false>\\n                        <a routerLink=\\\"/pages/policy/limitconn/{{_id}}\\\">防CC</a>\\n                      </li>\\n                      <li [class.active]=false>\\n                        <a routerLink=\\\"/pages/policy/antidetection/{{_id}}\\\">防探测</a>\\n                      </li>\\n                    </ul>\\n                    <div class=\\\"padding-top-10 col-md-12\\\" style=\\\"background: #fff;\\\">\\n                        <form class=\\\"form-horizontal\\\"\\n                              #antilinkForm=\\\"ngForm\\\">\\n                            <div class=\\\"col-md-12\\\">\\n\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"padding-top: 20px;\\\">\\n                                    <legend>防信息滥用</legend>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"col-md-4 control-label\\\">\\n                                        状态\\n                                    </div>\\n                                    <div class=\\\"col-md-8\\\">\\n                                        <label class=\\\"radio radio-inline\\\">\\n                                            <input type=\\\"radio\\\" name=\\\"state\\\" id=\\\"hotlink_state_1\\\"\\n                                                   (click)=\\\"setState(true)\\\"\\n                                                   [checked]=\\\"datas.config.twaf_anti_hotlink.state\\\" value=\\\"1\\\">\\n                                            开 </label>\\n                                        <label class=\\\"radio radio-inline\\\">\\n                                            <input type=\\\"radio\\\" name=\\\"state\\\" id=\\\"hotlink_state_0\\\"\\n                                                   (click)=\\\"setState(false)\\\"\\n                                                   [checked]=\\\"!datas.config.twaf_anti_hotlink.state\\\" value=\\\"0\\\">\\n                                            关 </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"control-label col-md-4\\\">文件扩展名</label>\\n                                    <div class=\\\"col-md-4\\\">\\n                                        <rl-tag-input name=\\\"uri_ext\\\" [(ngModel)]=\\\"datas.config.twaf_anti_hotlink.uri_ext\\\"></rl-tag-input>\\n                                        <!--<input smartTags class=\\\"form-control tagsinput\\\" name=\\\"uri_ext\\\"\\n                                               [ngModel]=\\\"uri_ext\\\"\\n                                               value=\\\"{{uri_ext}}\\\" data-role=\\\"tagsinput\\\">-->\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-md-4 control-label\\\">工作模式</label>\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <select name=\\\"mode\\\" id=\\\"mode\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"datas.config.twaf_anti_hotlink.mode\\\">\\n                                            <option class=\\\"col-md-1\\\"\\n                                                    *ngFor=\\\"let item of mode_list\\\"\\n                                                    [value]=\\\"item.value\\\"\\n                                            >{{item.name}}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"datas.config.twaf_anti_hotlink.mode !== 'referer'\\\">\\n                                    <div class=\\\"rowGroup\\\">\\n                                        <label class=\\\"col-md-4 control-label\\\" for=\\\"exclude\\\">排除</label>\\n                                        <div class=\\\"col-md-4\\\">\\n                                        <textarea id=\\\"exclude\\\"\\n                                                  [(ngModel)]=\\\"exclude\\\"\\n                                                  class=\\\"form-control\\\" rows=\\\"3\\\"\\n                                                  name=\\\"exclude\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"datas.config.twaf_anti_hotlink.mode !== 'cookie'\\\">\\n                                    <div class=\\\"rowGroup\\\">\\n                                        <label class=\\\"col-md-4 control-label\\\" for=\\\"entry\\\">入口</label>\\n                                        <div class=\\\"col-md-4\\\">\\n                                        <textarea id=\\\"entry\\\"\\n                                                  [(ngModel)]=\\\"entry\\\"\\n                                                  class=\\\"form-control\\\" rows=\\\"3\\\"\\n                                                  name=\\\"entry\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"rowGroup\\\">\\n                                        <label class=\\\"col-md-4 control-label\\\">动作</label>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <select name=\\\"action\\\" id=\\\"ant_action\\\" class=\\\"form-control\\\"\\n                                                    [(ngModel)]=\\\"datas.config.twaf_anti_hotlink.action\\\">\\n                                                <option class=\\\"col-md-1\\\"\\n                                                        *ngFor=\\\"let item of ant_action_list\\\"\\n                                                        [value]=\\\"item.value\\\"\\n                                                >{{item.name}}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"rowGroup\\\" [hidden]=\\\"datas.config.twaf_anti_hotlink.action != 'redirect'\\\">\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <input\\n                                                   name=\\\"ant_redirect_url\\\"\\n                                                   id=\\\"ant_redirect_url\\\"\\n                                                   [(ngModel)]=\\\"datas.config.twaf_anti_hotlink.redirect_url\\\"\\n                                                   class=\\\"form-control\\\"\\n                                            />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <select *ngIf=\\\"datas.config.twaf_anti_hotlink.action == 'deny'\\\"\\n                                                name=\\\"ant_action_meta\\\" id=\\\"ant_action_meta\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"datas.config.twaf_anti_hotlink.action_meta\\\">\\n                                            <option class=\\\"col-md-1\\\"\\n                                                    *ngFor=\\\"let item of codeList\\\"\\n                                                    [value]=\\\"item.value\\\"\\n                                            >{{item.text}}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-actions tt-form-actions-center\\\" style=\\\"padding-bottom: 25px; padding-top: 15px;\\\">\\n                                    <footer>\\n                                        <button type=\\\"submit\\\" class=\\\"btn tt-btn-info btn-sm\\\" (click)=\\\"submit(antilinkForm)\\\">\\n                                            确 认\\n                                        </button>&nbsp;&nbsp;\\n                                        <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"Reset()\\\">\\n                                           重置\\n                                         </button>-->\\n                                        <button type=\\\"button\\\" class=\\\"btn tt-btn-info btn-sm\\\" [routerLink]=\\\"['/pages/policy']\\\">\\n                                            取 消\\n                                        </button>\\n                                    </footer>\\n                                </div>\\n                            </div>\\n                        </form>\\n\\n                    </div>\\n                    <!-- end widget content -->\\n                </div>\\n                <!-- end widget div -->\\n            </div>\\n            <!-- end widget -->\\n        </article>\\n        <!-- WIDGET END -->\\n    </div>\\n\\n</div>\\n\"","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {PolicyClass} from \"../policy.class\";\nimport {PolicyService} from \"../policy.service\";\n\n@Component({\n    selector: 'app-antilink',\n    templateUrl: './antilink.component.html',\n    styleUrls: ['./antilink.component.css']\n})\nexport class AntilinkComponent implements OnInit {\n    exclude: any;\n    entry: any;\n    _id: string;\n    datas: PolicyClass = new PolicyClass();\n    i = new Date().getTime();\n    headers: any = [];\n    mode_list = [\n        {'name': 'Referer', 'value': 'referer'},\n        {'name': 'Cookie', 'value': 'cookie'},\n    ];\n    ant_action_list = [\n        {'name': '拦截并发送响应码', 'value': 'deny'},\n        {'name': '重定向', 'value': 'redirect'},\n        {'name': '连接重置', 'value': 'reset_connection'},\n        {'name': '放行', 'value': 'pass'},\n    ];\n    codeList = [\n        {value: \"400\", text: \"400\"},\n        {value: \"401\", text: \"401\"},\n        {value: \"403\", text: \"403\"},\n        {value: \"404\", text: \"404\"},\n        {value: \"405\", text: \"405\"},\n        {value: \"410\", text: \"410\"},\n        {value: \"500\", text: \"500\"},\n        {value: \"501\", text: \"501\"},\n        {value: \"503\", text: \"503\"},\n        {value: \"504\", text: \"504\"}\n    ];\n  constructor(\n    private _router: Router,\n    private _service: PolicyService,\n    private _activatedRoute: ActivatedRoute) {\n  }\n\n    ngOnInit() {\n        // 初始化表单数据\n        this._activatedRoute.params.subscribe((params) => {\n            this._id = params['_id'];\n            if (this._id) {\n                this._service.getPolicy(this._id).subscribe(data => {\n                    this.datas.config = data['result'];\n                    if (JSON.stringify(this.datas.config.twaf_anti_hotlink.exclude) !== '{}') {\n                      this.exclude = this.datas.config.twaf_anti_hotlink.exclude.join('\\n');\n                    }\n                    if (JSON.stringify(this.datas.config.twaf_anti_hotlink.entry) !== '{}') {\n                      this.entry = this.datas.config.twaf_anti_hotlink.entry.join('\\n');\n                    }\n                })\n            }\n        });\n    }\n\n    setState(value) {\n        this.datas.config.twaf_anti_hotlink.state = value;\n    }\n\n    submit(form) {\n        const that = this;\n        if (this.exclude) {\n            this.datas.config.twaf_anti_hotlink.exclude = this.exclude.split('\\n');\n        } else {\n            this.datas.config.twaf_anti_hotlink.exclude = [];\n        }\n        if (this.entry) {\n            this.datas.config.twaf_anti_hotlink.entry = this.entry.split('\\n');\n        } else {\n            this.datas.config.twaf_anti_hotlink.entry = [];\n        }\n        this._service.setPolicy(this._id, this.datas).subscribe(\n            res => {\n                if (res['success']) {\n                    // this.toastr.success('编辑成功！', '');\n                    // 延迟1s 后跳转至列表页面\n                    setTimeout(function () {\n                        that._router.navigate(['pages', 'policy']); // 为什么用that ： this容易找不到指代的是谁\n                    }, '1000');\n                } else {\n                    // this.toastr.error('编辑失败！', '');\n                }\n            },\n            error => {\n                // this.toastr.error('编辑失败！', '');\n            }\n        )\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\n  <div class=\\\"row\\\">\\n    <!-- NEW WIDGET START -->\\n    <article class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n      <!-- Widget ID (each widget will need unique ID)-->\\n      <div>\\n        <!-- widget div-->\\n        <!-- widget content -->\\n        <div class=\\\"widget-body\\\" style=\\\"padding: 0 0 0 0px; background: #fff; border-radius: 0.25rem;\\\">\\n          <ul id=\\\"myTab1\\\" class=\\\"nav nav-tabs bordered\\\">\\n            <li [class.active]=false>\\n              <a routerLink=\\\"/pages/policy/secrules/{{_id}}\\\">攻击防护</a>\\n            </li>\\n            <li [class.active]=false>\\n              <a routerLink=\\\"/pages/policy/antilink/{{_id}}\\\">防信息滥用</a>\\n            </li>\\n            <li [class.active]=true>\\n              <a routerLink=\\\"/pages/policy/limitconn/{{_id}}\\\">防CC</a>\\n            </li>\\n            <li [class.active]=false>\\n              <a routerLink=\\\"/pages/policy/antidetection/{{_id}}\\\">防探测</a>\\n            </li>\\n          </ul>\\n          <div class=\\\"padding-top-10 col-md-12\\\" style=\\\"background: #fff;\\\">\\n            <form class=\\\"form-horizontal\\\"\\n                  #limitconnForm=\\\"ngForm\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group col-md-12\\\" style=\\\"padding-top: 20px;\\\">\\n                  <legend>防CC</legend>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4 control-label\\\">\\n                    状态\\n                  </div>\\n                  <div class=\\\"col-md-8\\\">\\n                    <label class=\\\"radio radio-inline\\\">\\n                      <input type=\\\"radio\\\" name=\\\"limit_conn_state\\\" id=\\\"limit_conn_state_1\\\"\\n                             (click)=\\\"setStateLimitState(true)\\\"\\n                             [checked]=\\\"datas.config.twaf_limit_conn.state\\\"\\n                             value=\\\"1\\\">\\n                      开 </label>\\n                    <label class=\\\"radio radio-inline\\\">\\n                      <input type=\\\"radio\\\" name=\\\"limit_conn_state\\\" id=\\\"limit_conn_state_0\\\"\\n                             (click)=\\\"setStateLimitState(false)\\\"\\n                             [checked]=\\\"!datas.config.twaf_limit_conn.state\\\"\\n                             value=\\\"0\\\">\\n                      关 </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\">触发阈值</label>\\n                  <label class=\\\"control-label col-md-5 text-align-left\\\"></label>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\"></label>\\n                  <label class=\\\"control-label col-md-5\\\" style=\\\"text-align:left;\\\">(当满足以下任一条件时，进入CC攻击防护状态)</label>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"rowGroup\\\">\\n                    <label class=\\\"col-md-5 control-label\\\">每秒请求数</label>\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                              type=\\\"number\\\"\\n                              name=\\\"req_count_max\\\"\\n                              id=\\\"req_count_max\\\"\\n                              [(ngModel)]=\\\"datas.config.twaf_limit_conn.trigger_thr.req_count_max\\\"\\n                              class=\\\"form-control\\\"/>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">次</div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"rowGroup\\\">\\n                    <label class=\\\"col-md-5 control-label\\\">每秒请求流量</label>\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                              type=\\\"number\\\"\\n                              name=\\\"req_flow_max\\\"\\n                              id=\\\"req_flow_max\\\"\\n                              [(ngModel)]=\\\"datas.config.twaf_limit_conn.trigger_thr.req_flow_max\\\"\\n                              class=\\\"form-control\\\"/>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">B</div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\">清洗阈值</label>\\n                  <label class=\\\"col-md-5 control-label text-align-left\\\"></label>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\"></label>\\n                  <label class=\\\"col-md-5 control-label\\\" style=\\\"text-align:left;\\\">(当满足以下任一条件时，执行清洗动作)</label>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"rowGroup\\\">\\n                    <label class=\\\"col-md-5 control-label\\\">单一源IP每秒请求数</label>\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                              type=\\\"number\\\"\\n                              name=\\\"req_max\\\"\\n                              id=\\\"req_max\\\"\\n                              [(ngModel)]=\\\"datas.config.twaf_limit_conn.clean_thr.req_max\\\"\\n                              class=\\\"form-control\\\"/>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">个</div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"rowGroup\\\">\\n                    <label class=\\\"col-md-5 control-label\\\">单一源IP每秒新建连接数</label>\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                              type=\\\"number\\\"\\n                              name=\\\"new_conn_max\\\"\\n                              id=\\\"new_conn_max\\\"\\n                              [(ngModel)]=\\\"datas.config.twaf_limit_conn.clean_thr.new_conn_max\\\"\\n                              class=\\\"form-control\\\"/>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">个</div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"rowGroup\\\">\\n                    <label class=\\\"col-md-5 control-label\\\">单一源IP总连接数</label>\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                              type=\\\"number\\\"\\n                              name=\\\"conn_max\\\"\\n                              id=\\\"conn_max\\\"\\n                              [(ngModel)]=\\\"datas.config.twaf_limit_conn.clean_thr.conn_max\\\"\\n                              class=\\\"form-control\\\"/>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">个</div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"rowGroup\\\">\\n                    <label class=\\\"col-md-5 control-label\\\">单一路径每秒请求总数</label>\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                              type=\\\"number\\\"\\n                              name=\\\"uri_frequency_max\\\"\\n                              id=\\\"uri_frequency_max\\\"\\n                              [(ngModel)]=\\\"datas.config.twaf_limit_conn.clean_thr.uri_frequency_max\\\"\\n                              class=\\\"form-control\\\"/>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">个</div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\">动作</label>\\n                  <div class=\\\"col-md-2\\\">\\n                    <select name=\\\"limit_conn_action\\\" id=\\\"limit_conn_action\\\" class=\\\"form-control\\\"\\n                            [(ngModel)]=\\\"datas.config.twaf_limit_conn.action\\\">\\n                      <option class=\\\"col-md-1\\\"\\n                              *ngFor=\\\"let item of limit_conn_action_list\\\"\\n                              [value]=\\\"item.value\\\"\\n                      >{{item.name}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"rowGroup\\\" [hidden]=\\\"datas.config.twaf_limit_conn.action != 'redirect'\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                      <input\\n                             name=\\\"limit_conn_redirect_url\\\"\\n                             id=\\\"limit_conn_redirect_url\\\"\\n                             [(ngModel)]=\\\"datas.config.twaf_limit_conn.redirect_url\\\"\\n                             class=\\\"form-control\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <select *ngIf=\\\"datas.config.twaf_limit_conn.action == 'deny'\\\"\\n                            name=\\\"limit_conn_action_meta\\\" id=\\\"limit_conn_action_meta\\\" class=\\\"form-control\\\"\\n                            [(ngModel)]=\\\"datas.config.twaf_limit_conn.action_meta\\\">\\n                      <option class=\\\"col-md-1\\\"\\n                              *ngFor=\\\"let item of codeList\\\"\\n                              [value]=\\\"item.value\\\"\\n                      >{{item.text}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-actions tt-form-actions-center\\\" style=\\\"padding-bottom: 25px; padding-top: 15px;\\\">\\n                  <footer>\\n                    <button type=\\\"submit\\\" class=\\\"btn tt-btn-info btn-sm\\\" (click)=\\\"submit(limitconnForm)\\\">\\n                      确 认\\n                    </button>&nbsp;&nbsp;\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"Reset()\\\">\\n                       重置\\n                     </button>-->\\n                    <button type=\\\"button\\\" class=\\\"btn tt-btn-info btn-sm\\\" [routerLink]=\\\"['/pages/policy']\\\">\\n                      取 消\\n                    </button>\\n                  </footer>\\n                </div>\\n              </div>\\n            </form>\\n\\n          </div>\\n          <!-- end widget content -->\\n        </div>\\n        <!-- end widget div -->\\n      </div>\\n      <!-- end widget -->\\n    </article>\\n    <!-- WIDGET END -->\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PolicyClass} from \"../policy.class\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {PolicyService} from \"../policy.service\";\n\n@Component({\n  selector: 'app-limitconn',\n  templateUrl: './limitconn.component.html',\n  styleUrls: ['./limitconn.component.css']\n})\nexport class LimitconnComponent implements OnInit {\n  _id: string;\n  datas: PolicyClass = new PolicyClass();\n\n  limit_conn_action_list = [\n    {'name': '拦截并发送响应码', 'value': 'deny'},\n    {'name': '重定向', 'value': 'redirect'},\n    {'name': '连接重置', 'value': 'reset_connection'},\n    {'name': '放行', 'value': 'pass'},\n    {'name': '人机识别', 'value': 'robot'},\n  ];\n  codeList = [\n    {value: \"400\", text: \"400\"},\n    {value: \"401\", text: \"401\"},\n    {value: \"403\", text: \"403\"},\n    {value: \"404\", text: \"404\"},\n    {value: \"405\", text: \"405\"},\n    {value: \"410\", text: \"410\"},\n    {value: \"500\", text: \"500\"},\n    {value: \"501\", text: \"501\"},\n    {value: \"503\", text: \"503\"},\n    {value: \"504\", text: \"504\"}\n  ];\n  constructor(\n    private _router: Router,\n    private _service: PolicyService,\n    private _activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    // 初始化表单数据\n    this._activatedRoute.params.subscribe((params) => {\n      this._id = params['_id'];\n      if (this._id) {\n        this._service.getPolicy(this._id).subscribe(data => {\n          this.datas.config = data['result'];\n        })\n      }\n    });\n  }\n\n  setStateLimitState(value) {\n    this.datas.config.twaf_limit_conn.state = value;\n  }\n\n  submit(form) {\n    const that = this;\n    this._service.setPolicy(this._id, this.datas).subscribe(\n        res => {\n          if (res['success']) {\n            // this.toastr.success('编辑成功！', '');\n            // 延迟1s 后跳转至列表页面\n            setTimeout(function () {\n              that._router.navigate(['pages', 'policy']); // 为什么用that ： this容易找不到指代的是谁\n            }, '1000');\n          } else {\n            // this.toastr.error('编辑失败！', '');\n          }\n        },\n        error => {\n            // this.toastr.error('编辑失败！', '');\n        }\n    )\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n        <i class=\\\"fa fa-times fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n    </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <form\\n                    class=\\\"form-horizontal\\\"\\n                    id=\\\"line-form\\\"\\n                    #policyForm=\\\"ngForm\\\"\\n            >\\n                <div style=\\\"background-color:#fff;\\\">\\n                    <fieldset>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"col-sm-3 control-label\\\">名称</label>\\n                                <div class=\\\"col-sm-7\\\">\\n                                    <input type=\\\"text\\\"\\n                                           class=\\\"form-control\\\"\\n                                           name=\\\"name\\\"\\n                                           id=\\\"name\\\"\\n                                           [(ngModel)]=\\\"datas.result.name\\\"\\n                                    />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-actions tt-form-actions-center\\\">\\n                                <footer>\\n                                    <button type=\\\"submit\\\" class=\\\"btn tt-btn-info btn-sm\\\" (click)=\\\"submit()\\\">\\n                                        确认\\n                                    </button>&nbsp;&nbsp;\\n                                    <button type=\\\"button\\\" class=\\\"btn tt-btn-info btn-sm\\\" (click)=\\\"bsModalRef.hide()\\\">\\n                                        返回\\n                                    </button>\\n                                </footer>\\n                            </div>\\n                        </div>\\n                    </fieldset>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from \"@angular/core\";\nimport {BsModalRef} from \"ngx-bootstrap\";\nimport {PolicyService} from \"../policy.service\";\n\n@Component({\n  selector: 'app-modal-content-policy',\n  templateUrl: './modal-content-policy.component.html',\n})\n\nexport class ModalContentPolicyComponent implements OnInit {\n  toastr: any;\n  thats: any;\n  datas: any;\n\n  constructor(public bsModalRef: BsModalRef,\n              private _service: PolicyService,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  submit(form) {\n    this._service.addPolicy(\n      this.datas['result']['name'],\n      {config: this.datas['result']['config']})\n      .subscribe(\n        data => {\n          if (data['success']) {\n            // this.toastr.success('防护策略添加成功！', '');\n          } else {\n            // this.toastr.error(data.message);\n          }\n          this.bsModalRef.hide();\n          this.thats.setPage();\n        },\n        error => {\n          // this.toastr.error('防护策略添加失败!', JSON.stringify(error.error._issues));\n        })\n  }\n}\n","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    策略列表\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"offset-md-8 col-md-4\\\">\\n          <div class=\\\"pull-right\\\" style=\\\"padding-top: 5px; padding-bottom: 5px; margin-bottom: 0px; float: right;\\\">\\n            <a class=\\\"btn tt-btn-info btn-sm\\\" title=\\\"添加\\\" (click)=\\\"create()\\\" style=\\\"margin-right: 5px; color: #fff;\\\">\\n              <i class=\\\"icon ion-plus-round\\\"></i> 添加\\n            </a>\\n            <a class=\\\"btn tt-btn-info btn-sm\\\" title=\\\"刷新\\\" (click)=\\\"refresh()\\\" style=\\\"color: #fff;\\\">\\n              <i class=\\\"icon ion-loop\\\"></i> 刷新\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </nb-card-header>\\n  <nb-card-body>\\n    <ngx-datatable\\n      class=\\\"table-striped table-hover\\\"\\n      [rows]=\\\"rows\\\"\\n      [loadingIndicator]=\\\"loadingIndicator\\\"\\n      [columnMode]=\\\"'force'\\\"\\n      [headerHeight]=\\\"40\\\"\\n      [footerHeight]=\\\"45\\\"\\n      [rowHeight]=\\\"'auto'\\\"\\n      [messages]=\\\"{\\n                emptyMessage: '无数据',\\n                totalMessage: '条',\\n                selectedMessage: '选中'\\n            }\\\"\\n\\n      [cssClasses]=\\\"{\\n        sortAscending: 'fa fa-caret-up',\\n        sortDescending: 'fa fa-caret-down',\\n        pagerLeftArrow: 'fa  fa-angle-left',\\n        pagerRightArrow: 'fa fa-angle-right',\\n        pagerPrevious: 'fa fa-angle-double-left',\\n        pagerNext: 'fa fa-angle-double-right'\\n      }\\\"\\n      [reorderable]=\\\"reorderable\\\">\\n      <ngx-datatable-column name=\\\"name\\\" [width]=\\\"100\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n          <strong>名称</strong>\\n        </ng-template>\\n        <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n          <span>{{value}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"result\\\" [width]=\\\"100\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n          <strong>仿真模式</strong>\\n        </ng-template>\\n        <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n          <span>{{value.twaf_global.simulation}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"result\\\" [width]=\\\"100\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n          <strong>智能行为检测</strong>\\n        </ng-template>\\n        <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n          <span>{{value.twaf_secrules.intelligent_behavior_detection}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column\\n        name=\\\"result\\\"\\n        [width]=\\\"300\\\"\\n        [resizeable]=\\\"false\\\"\\n        [sortable]=\\\"false\\\"\\n        [draggable]=\\\"false\\\"\\n        [canAutoResize]=\\\"false\\\">\\n        <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>\\n          <strong>操作</strong>\\n        </ng-template>\\n        <ng-template class=\\\"row\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n          <!-- <a class=\\\"btn btn-info btn-xs\\\" title=\\\"复制\\\" (click)=\\\"copy(row)\\\" >\\n               <i class=\\\"fa fa-pencil-square-o\\\"></i> 复制\\n           </a>-->\\n          <a class=\\\"btn tt-btn-success btn-xs\\\" title=\\\"编辑\\\" (click)=\\\"edit(row)\\\" style=\\\"color: #fff; margin-right: 5px;\\\">\\n            <i class=\\\"icon ion-edit\\\"></i> 编辑\\n          </a>\\n          <a class=\\\"btn tt-btn-warning btn-xs\\\" title=\\\"删除\\\" (click)=\\\"delete(row)\\\" style=\\\"color: #fff;\\\">\\n            <i class=\\\"icon ion-trash-a\\\"></i> 删除\\n          </a>\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n  </nb-card-body>\\n</nb-card>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {DatatableComponent} from \"@swimlane/ngx-datatable\";\nimport {Router} from \"@angular/router\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap\";\nimport {ModalContentPolicyComponent} from \"./modal-content-policy.component\";\nimport {PolicyService} from \"../policy.service\";\nimport {ServerService} from \"../../server/server.service\";\n\n@Component({\n  selector: 'app-policy-list',\n  templateUrl: './policy-list.component.html',\n  providers: [BsModalRef]\n})\nexport class PolicyListComponent implements OnInit {\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  loadingIndicator: boolean = true;\n  reorderable: boolean = true;\n  rows = new Array();\n\n  datas: any;\n\n  constructor(private _service: PolicyService,\n              private _services: ServerService,\n              private _router: Router,\n              private modalService: BsModalService,\n              private bsModalRef: BsModalRef) {\n  }\n\n  ngOnInit() {\n    this.setPage();\n  }\n\n  refresh() {\n    this.setPage();\n    // this.toastr.success('列表数据刷新完成!', '');\n  }\n\n  edit(row) {\n    this._router.navigate(['pages', 'policy', 'secrules', row.name]);\n  }\n\n  delete(row) {\n    console.log(row);\n    const that = this;\n    if (window.confirm('确定要删除该项么?')) {\n      this._service.deletePolicy(row.name)\n        .subscribe(data => {\n            setTimeout(function () {\n              that.setPage();\n            }, '1000');\n            // that.toastr.success('删除成功！');\n          },\n          error => {\n            // that.toastr.error('删除失败！已被引用！');\n          }\n        )\n    }\n  }\n\n  setPage() {\n    this.rows = [];\n    this._service.getPolicyAll().subscribe(data => {\n      this.rows = data;\n      this.loadingIndicator = false;\n    });\n  }\n\n  create() {\n    const datas = {\n      result: {\n        name: \"\",\n        shared: false,\n        config: {\n          twaf_secrules: {\n            state: true,\n            reqbody_state: true,\n            reqbody_limit: 131072,\n            body_filter_state: false,\n            respbody_limit: 128,\n            intelligent_behavior_detection: true,\n            disable_vars: [\"REQBODY_ERROR\", \"MULTIPART_STRICT_ERROR\"],\n            action: 'deny',\n            protection_level: 9,\n            action_meta: \"403\"\n          },\n          twaf_anti_hotlink: {\n            state: false,\n            mode: 'referer',\n            action: 'deny',\n            action_meta: \"403\",\n            uri_ext: [\"html\", \"js\", \"css\", \"txt\", \"jsp\", \"png\"],\n            exclude: [],\n            entry: []\n          },\n          twaf_limit_conn: {\n            state: true,\n            trigger_thr: {\n              req_flow_max: 314572800,\n              req_count_max: 10000\n            },\n            clean_thr: {\n              req_max: 50,\n              new_conn_max: 40,\n              conn_max: 100,\n              uri_frequency_max: 3000\n            },\n            action: 'reset_connection',\n            action_meta: \"403\"\n          },\n          twaf_anti_mal_crawler: {\n            state: true,\n            force_scan_robots_state: true,\n            action: 'deny',\n            action_meta: \"403\"\n          },\n          twaf_cookie_guard: {\n            state: false,\n            anti_tamper_state: true,\n            anti_tamper_mode: \"suffix\",\n            anti_tamper_exclude: [],\n            crypt_state: false,\n            crypt_exclude: [],\n            action: 'deny',\n            action_meta: \"403\",\n            cookie: {Secure: false, HttpOnly: false},\n            cookie_key: \"cookieguard\"\n            // http_only_state: true\n          },\n          twaf_attack_response: {\n            detail_state: false\n          },\n        }\n      }\n    };\n    const initialState = {\n      datas: datas,\n      // toastr: this.toastr,\n      thats: this\n    };\n    this.bsModalRef = this.modalService.show(\n      ModalContentPolicyComponent,\n      Object.assign(\n        {initialState},\n        {class: 'modal-lg'}\n      )\n    );\n    this.bsModalRef.content.title = '添加策略';\n    this.bsModalRef.content.closeBtnName = '关闭';\n  }\n\n}\n","\nexport class PolicyClass {\n    config: any = {\n        twaf_secrules: {\n            state: true,\n            reqbody_state: true,\n            reqbody_limit: 131072,\n            body_filter_state: false,\n            respbody_limit: 128,\n            intelligent_behavior_detection: true,\n            disable_vars: [\"REQBODY_ERROR\", \"MULTIPART_STRICT_ERROR\"],\n            action: 'deny',\n            protection_level: 9,\n            action_meta: \"403\"\n        },\n        twaf_anti_hotlink: {\n            state: false,\n            mode: 'referer',\n            action: 'deny',\n            action_meta: \"403\",\n            uri_ext: [\"html\", \"js\", \"css\", \"txt\", \"jsp\", \"png\"],\n            exclude: [],\n            entry: []\n        },\n        twaf_limit_conn: {\n            state: true,\n            trigger_thr: {\n                req_flow_max: 314572800,\n                req_count_max: 10000\n            },\n            clean_thr: {\n                req_max: 50,\n                new_conn_max: 40,\n                conn_max: 100,\n                uri_frequency_max: 3000\n            },\n            action: 'reset_connection',\n            action_meta: \"403\"\n        },\n        twaf_anti_mal_crawler: {\n            state: true,\n            force_scan_robots_state: true,\n            action: 'deny',\n            action_meta: \"403\"\n        }\n    }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <app-policy-list></app-policy-list>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {PolicyService} from \"./policy.service\";\n\n@Component({\n    selector: 'app-policy',\n    templateUrl: './policy.component.html',\n    styleUrls: []\n})\nexport class PolicyComponent implements OnInit {\n    public state: any = {\n        tabs: {\n            demo1: 0,\n        }\n    };\n    constructor(\n        private _service: PolicyService,\n        private _router: Router,\n\n) {\n    }\n    ngOnInit() {\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {PolicyRouting} from \"./policy.routing\";\nimport {PolicyListComponent} from \"./policy-list/policy-list.component\";\nimport {PolicyComponent} from \"./policy.component\";\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {SecrulesComponent} from \"./secrules/secrules.component\";\nimport {AntilinkComponent} from \"./antilink/antilink.component\";\nimport {LimitconnComponent} from \"./limitconn/limitconn.component\";\nimport {AntidetectionComponent} from \"./antidetection/antidetection.component\";\nimport {ModalContentPolicyComponent} from \"./policy-list/modal-content-policy.component\";\nimport {ModalModule} from \"ngx-bootstrap\";\nimport {ThemeModule} from \"../../@theme/theme.module\";\nimport {RlTagInputModule} from \"angular2-tag-input/dist\";\n\n@NgModule({\n    imports: [\n        ModalModule.forRoot(),\n      ThemeModule,\n        PolicyRouting,\n        NgxDatatableModule,\n      RlTagInputModule,\n    ],\n    declarations: [\n        PolicyListComponent, ModalContentPolicyComponent, PolicyComponent,\n        SecrulesComponent, AntilinkComponent, LimitconnComponent, AntidetectionComponent],\n    entryComponents: [ModalContentPolicyComponent]\n})\nexport class PolicyModule { }\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PolicyComponent} from \"./policy.component\";\nimport {SecrulesComponent} from \"./secrules/secrules.component\";\nimport {AntilinkComponent} from \"./antilink/antilink.component\";\nimport {LimitconnComponent} from \"./limitconn/limitconn.component\";\nimport {AntidetectionComponent} from \"./antidetection/antidetection.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PolicyComponent,\n  },\n  {\n    path: 'edit/:_id',\n    component: SecrulesComponent,\n    data: {\n      pageTitle: '编辑',\n    },\n  },\n  {\n    path: 'secrules/:_id',\n    component: SecrulesComponent,\n    data: {\n      pageTitle: '攻击防护',\n    },\n  },\n  {\n    path: 'antilink/:_id',\n    component: AntilinkComponent,\n    data: {\n      pageTitle: '防信息滥用',\n    },\n  },\n  {\n    path: 'limitconn/:_id',\n    component: LimitconnComponent,\n    data: {\n      pageTitle: '防CC',\n    },\n  },\n  {\n    path: 'antidetection/:_id',\n    component: AntidetectionComponent,\n    data: {\n      pageTitle: '防探测',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PolicyRouting {\n}\n","import {Injectable} from '@angular/core';\nimport {BasicHttpService} from \"../../@theme/http/basichttp.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n@Injectable()\nexport class PolicyService {\n\n    policyUrl = '/policy';\n\n    constructor(private _basicHttpService: BasicHttpService) {\n    }\n    // policy\n    getPolicyAll = function () {\n        const opt = this._basicHttpService.NewReqOpts();\n        return this._basicHttpService.MyPolicy(this.policyUrl, opt);\n    }\n\n    getPolicy(id) {\n        const opt = this._basicHttpService.NewReqOpts();\n        return this._basicHttpService.MyGet(this.policyUrl + '/' + id, opt);\n    }\n\n    addPolicy(uuid, data) {\n        const opt = this._basicHttpService.NewReqOpts();\n        return this._basicHttpService.MyPost(this.policyUrl + '/' + uuid, data, opt, true);\n    }\n\n    setPolicy(id, data) {\n        const opt = this._basicHttpService.NewReqOpts();\n        return this._basicHttpService.MyPut(this.policyUrl + '/' + id, data, opt, true);\n    }\n\n    deletePolicy(id) {\n        const opt = this._basicHttpService.NewReqOpts();\n        return this._basicHttpService.MyDelete(this.policyUrl + '/' + id, opt, true);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"content\\\">\\n  <div class=\\\"row\\\">\\n    <!-- NEW WIDGET START -->\\n    <article class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n      <!-- Widget ID (each widget will need unique ID)-->\\n      <div>\\n        <!-- widget div-->\\n          <!-- widget content -->\\n          <div class=\\\"widget-body\\\" style=\\\"padding: 0 0 0 0px; background: #fff; border-radius: 0.25rem;\\\">\\n            <ul id=\\\"myTab1\\\" class=\\\"nav nav-tabs bordered\\\">\\n              <li [class.active]=true>\\n                <a routerLink=\\\"/pages/policy/secrules/{{_id}}\\\">攻击防护</a>\\n              </li>\\n              <li [class.active]=false>\\n                <a routerLink=\\\"/pages/policy/antilink/{{_id}}\\\">防信息滥用</a>\\n              </li>\\n              <li [class.active]=false>\\n                <a routerLink=\\\"/pages/policy/limitconn/{{_id}}\\\">防CC</a>\\n              </li>\\n              <li [class.active]=false>\\n                <a routerLink=\\\"/pages/policy/antidetection/{{_id}}\\\">防探测</a>\\n              </li>\\n            </ul>\\n            <div class=\\\"padding-top-10 col-md-12\\\" style=\\\"background: #fff;\\\">\\n              <form class=\\\"form-horizontal\\\"\\n                    #secrulesForm=\\\"ngForm\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group col-md-12\\\" style=\\\"padding-top: 20px;\\\">\\n                  <legend>基本配置</legend>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4 control-label\\\">\\n                    状态\\n                  </div>\\n                  <div class=\\\"col-md-8\\\">\\n                    <label class=\\\"radio radio-inline\\\">\\n                      <input type=\\\"radio\\\" name=\\\"state_secrules\\\" id=\\\"states_1\\\"\\n                             (click)=\\\"setStateSecrulesState(true)\\\"\\n                             [checked]=\\\"datas.config.twaf_secrules.state\\\"\\n                             value=\\\"1\\\">\\n                      开 </label>\\n                    <label class=\\\"radio radio-inline\\\">\\n                      <input type=\\\"radio\\\" name=\\\"state_secrules\\\" id=\\\"states_0\\\"\\n                             (click)=\\\"setStateSecrulesState(false)\\\"\\n                             [checked]=\\\"!datas.config.twaf_secrules.state\\\"\\n                             value=\\\"0\\\">\\n                      关 </label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4 control-label\\\">防护级别</label>\\n                  <div class=\\\"col-md-2\\\">\\n                    <select name=\\\"protection_level\\\" id=\\\"protection_level\\\" class=\\\"form-control\\\"\\n                            [(ngModel)]=\\\"datas.config.twaf_secrules.protection_level\\\">\\n                        <option class=\\\"col-md-1\\\"\\n                                *ngFor=\\\"let item of protection_level_list\\\"\\n                                [value]=\\\"item.value\\\"\\n                        >{{item.name}}\\n                        </option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-12\\\">\\n                  <legend>高级参数</legend>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4 control-label\\\">检测内容</div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"checkbox\\\">\\n                      <label>\\n                        <input\\n                                id=\\\"cookie_detect\\\"\\n                                name = \\\"cookie_detect\\\"\\n                                [(ngModel)]=\\\"tmp.cookie_detect\\\"\\n                                [checked]=\\\"tmp.cookie_detect\\\"\\n                                type=\\\"checkbox\\\"\\n                        />检测COOKIE中是否包含攻击内容\\n                      </label>\\n                    </div>\\n                    <div class=\\\"checkbox\\\">\\n                      <label>\\n                        <input\\n                                id=\\\"reqbody_state\\\"\\n                                name = \\\"reqbody_state\\\"\\n                                [(ngModel)]=\\\"datas.config.twaf_secrules.reqbody_state\\\"\\n                                [checked]=\\\"datas.config.twaf_secrules.reqbody_state\\\"\\n                                type=\\\"checkbox\\\"\\n\\n                        />检测请求体中是否包含攻击内容\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"rowGroup\\\">\\n                        <label class=\\\"col-md-4 control-label\\\">请求体检测阈值</label>\\n                        <div class=\\\"col-md-2\\\" >\\n                            <input\\n\\n                                    type=\\\"number\\\"\\n                                    name=\\\"reqbody_limit\\\"\\n                                    id=\\\"reqbody_limit\\\"\\n                                    [(ngModel)]=\\\"datas.config.twaf_secrules.reqbody_limit\\\"\\n                                    class=\\\"form-control\\\"\\n                            />\\n                        </div>\\n                        <div class=\\\"col-md-1\\\" style=\\\"padding-top: 5px;\\\">KB</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-actions tt-form-actions-center\\\" style=\\\"padding-bottom: 25px; padding-top: 15px;\\\">\\n                  <footer>\\n                    <button type=\\\"submit\\\" class=\\\"btn tt-btn-info btn-sm\\\" (click)=\\\"submit(secrulesForm)\\\">\\n                      确 认\\n                    </button>&nbsp;&nbsp;\\n                    <button type=\\\"button\\\" class=\\\"btn tt-btn-info btn-sm\\\" [routerLink]=\\\"['/pages/policy']\\\">\\n                      取 消\\n                    </button>\\n                  </footer>\\n                </div>\\n                </div>\\n            </form>\\n\\n          </div>\\n          <!-- end widget content -->\\n        </div>\\n        <!-- end widget div -->\\n      </div>\\n      <!-- end widget -->\\n    </article>\\n    <!-- WIDGET END -->\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {PolicyClass} from \"../policy.class\";\nimport {PolicyService} from \"../policy.service\";\n\n@Component({\n  selector: 'app-secrules',\n  templateUrl: './secrules.component.html',\n  styleUrls: ['./secrules.component.css']\n})\nexport class SecrulesComponent implements OnInit {\n  _id: string;\n  datas: PolicyClass = new PolicyClass();\n\n  tmp: any = [];\n  protection_level_list = [\n    {'name': '关键防护', 'value': '9'},\n    {'name': '均衡防护', 'value': '5'},\n    {'name': '全面防护', 'value': '1'},\n  ];\n\n  codeList = [\n    {value: \"400\", text: \"400\"},\n    {value: \"401\", text: \"401\"},\n    {value: \"403\", text: \"403\"},\n    {value: \"404\", text: \"404\"},\n    {value: \"405\", text: \"405\"},\n    {value: \"410\", text: \"410\"},\n    {value: \"500\", text: \"500\"},\n    {value: \"501\", text: \"501\"},\n    {value: \"503\", text: \"503\"},\n    {value: \"504\", text: \"504\"}\n  ];\n\n  constructor(\n    private _router: Router,\n    private _service: PolicyService,\n    private _activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    // 初始化表单数据\n    this._activatedRoute.params.subscribe((params) => {\n      this._id = params['_id'];\n      if (this._id) {\n        this._service.getPolicy(this._id).subscribe(data => {\n          this.datas.config = data['result'];\n          this.tmp.name = data['result']['name'];\n          this.tmp.ignore_data = true;\n          this.tmp.cookie_detect = true;\n          if (data['result'].twaf_secrules.disable_vars.indexOf(\"REQBODY_ERROR\") < 0) {\n            this.tmp.ignore_data = false;\n          }   // 不在数组中,即不失效 == 不丢弃异常请求\n          if (data['result'].twaf_secrules.disable_vars.indexOf(\"REQUEST_COOKIES\") >= 0) {\n            this.tmp.cookie_detect = false;\n          }  // 在数组中，不检测cookie中是否包含\n\n        })\n      }\n    });\n  }\n\n  setStateSecrulesState(value) {\n    this.datas.config.twaf_secrules.state = value;\n  }\n\n  submit() {\n    this.datas.config.twaf_secrules.disable_vars = [];\n    const that = this;\n    if (this.tmp.ignore_data) {\n      this.datas.config.twaf_secrules.disable_vars.push(\"REQBODY_ERROR\");\n      this.datas.config.twaf_secrules.disable_vars.push(\"MULTIPART_STRICT_ERROR\");\n    }\n    if (!this.tmp.cookie_detect) {\n      this.datas.config.twaf_secrules.disable_vars.push(\"REQUEST_COOKIES\");\n    }\n\n    this._service.setPolicy(this._id, this.datas).subscribe(\n      res => {\n        if (res['success']) {\n          // this.toastr.success('编辑成功！', '');\n          // 延迟1s 后跳转至列表页面\n          setTimeout(function () {\n            that._router.navigate(['pages', 'policy']); // 为什么用that ： this容易找不到指代的是谁\n          }, '1000');\n        } else {\n          // this.toastr.error('编辑失败！', '');\n        }\n      },\n      error => {\n        // this.toastr.error('编辑失败！', '');\n      }\n    )\n  }\n}\n"],"sourceRoot":""}